
{
  "name": "h3x-unified",
  "version": "2.0.0",
  "description": "H3X - Hexperimental AI Framework for automated code generation, analysis, and optimization",
  "type": "module",
  "engines": {
    "node": ">=18"
  },
  "author": "H3X Development Team",
  "license": "MIT",
  "main": "./src/index.ts",
  "keywords": [
    "ai",
    "automation",
    "typescript",
    "code-generation",
    "framework"
  ],
  "homepage": "https://github.com/your-org/H3X",
  "repository": {
    "type": "git",
    "url": "https://github.com/your-org/H3X.git"
  },
  "bugs": {
    "url": "https://github.com/your-org/H3X/issues"
  },
  "scripts": {
    "dev": "nodemon --inspect=9229 src/index.ts",
    "build": "tsc && vite build",
    "build:prod": "NODE_ENV=production npm run build",
    "start": "npx tsx dist/index.ts",
    "type-check": "tsc --noEmit",
    "lint": "eslint src tests scripts --ext .ts,.js",
    "lint:fix": "eslint src tests scripts --ext .ts,.js --fix",
    "format": "prettier --write src tests scripts",
    "clean": "rimraf dist coverage .nyc_output",
    "test": "vitest",
    "test:unit": "vitest --run tests/unit",
    "test:integration": "vitest --run tests/integration",
    "test:e2e": "vitest --run tests/e2e",
    "test:watch": "vitest --watch",
    "test:ui": "vitest --ui",
    "test:coverage": "vitest --coverage",
    "test:all": "npm run test:unit && npm run test:integration",
    "setup-check": "tsx scripts/setup-check.ts",
    "health-check": "tsx scripts/health-check.ts",
    "docker:dev": "docker-compose -f docker/docker-compose.dev.yml up -d",
    "docker:prod": "docker-compose -f docker/docker-compose.prod.yml up -d",
    "docker:stop": "docker-compose down",
    "docker:clean": "docker-compose down -v --rmi all && docker system prune -f",
    "env:dev": "docker-compose -f docker/docker-compose.dev.yml up -d",
    "env:dev:down": "docker-compose -f docker/docker-compose.dev.yml down",
    "standalone": "tsx src/index.ts",
    "lmstudio": "tsx src/agent-lmstudio.ts",
    "git:commit": "tsx scripts/git-pr-automation.ts commit",
    "git:pr": "tsx scripts/git-pr-automation.ts pr",
    "git:quick-pr": "tsx scripts/git-pr-automation.ts quick-pr",
    "git:interactive": "tsx scripts/git-pr-automation.ts interactive",
    "git:changelog": "tsx scripts/git-pr-automation.ts changelog",
    "maintenance:run": "tsx Scripts/remote-maintenance-agent.ts run",
    "maintenance:monitor": "tsx Scripts/remote-maintenance-agent.ts monitor",
    "maintenance:health": "tsx Scripts/remote-maintenance-agent.ts health",
    "maintenance:conflicts": "tsx Scripts/remote-maintenance-agent.ts conflicts",
    "maintenance:prs": "tsx Scripts/remote-maintenance-agent.ts prs",
    "maintenance:branches": "tsx Scripts/remote-maintenance-agent.ts branches",
    "maintenance:deps": "tsx Scripts/remote-maintenance-agent.ts deps",
    "maintenance:security": "tsx Scripts/remote-maintenance-agent.ts security",
    "maintenance:dashboard": "tsx Scripts/remote-maintenance-agent.ts dashboard",
    "maintenance:analytics": "tsx Scripts/remote-maintenance-agent.ts analytics",
    "maintenance:schedule": "tsx Scripts/remote-maintenance-agent.ts schedule",
    "analytics:report": "tsx Scripts/maintenance-analytics.ts report",
    "analytics:insights": "tsx Scripts/maintenance-analytics.ts insights",
    "analytics:dashboard": "tsx Scripts/maintenance-analytics.ts dashboard",
    "env:switch": "tsx Scripts/env-manager.ts switch",
    "env:list": "tsx Scripts/env-manager.ts list",
    "env:status": "tsx Scripts/env-manager.ts status",
    "env:secrets": "tsx Scripts/env-manager.ts secrets",
    "config:validate": "tsx Scripts/config-validator.ts",
    "setup": "npm run env:switch development && npm run config:validate",
    "postinstall": "echo 'H3X setup complete - no pre-commit hooks required'"
  },
  "dependencies": {
    "@langchain/core": "^0.3.57",
    "@langchain/langgraph": "^0.3.0",
    "@langchain/openai": "^0.5.12",
    "axios": "^1.9.0",
    "body-parser": "^1.20.3",
    "chokidar": "^4.0.3",
    "cors": "^2.8.5",
    "express": "^5.1.0",
    "fs-extra": "^11.2.0",
    "glob": "^10.4.5",
    "js-yaml": "^4.1.0",
    "lighthouse": "^12.6.1",
    "mongodb": "^6.17.0",
    "open": "^10.1.2",
    "pg": "^8.12.0",
    "redis": "^4.7.1",
    "tar-fs": "^3.0.9",
    "three": "^0.176.0",
    "uuid": "^11.1.0",
    "ws": "^8.18.2",
    "zod": "^3.25.30"
  },
  "devDependencies": {
    "@eslint/js": "^9.28.0",
    "@stylistic/eslint-plugin": "^4.4.1",
    "@testing-library/jest-dom": "^6.6.3",
    "@types/express": "^5.0.2",
    "@types/glob": "^8.1.0",
    "@types/jest": "^29.5.14",
    "@types/mongodb": "^4.0.6",
    "@types/node": "^22.15.31",
    "@types/redis": "^4.0.10",
    "@types/ws": "^8.18.1",
    "@typescript-eslint/eslint-plugin": "^8.33.1",
    "@typescript-eslint/parser": "^8.33.1",
    "@vitest/ui": "^3.2.1",
    "depcheck": "^1.4.7",
    "env-cmd": "^10.1.0",
    "eslint": "^9.28.0",
    "eslint-plugin-import": "^2.31.0",
    "eslint-plugin-security": "^3.0.1",
    "eslint-plugin-sonarjs": "^3.0.2",
    "htmlhint": "^1.1.4",
    "husky": "^9.1.7",
    "jiti": "^2.4.2",
    "jsdom": "^26.1.0",
    "jshint": "^2.13.6",
    "markdownlint-cli": "^0.37.0",
    "nodemon": "^3.1.10",
    "prettier": "^3.5.3",
    "puppeteer": "^24.9.0",
    "rimraf": "^6.0.1",
    "sass": "^1.89.1",
    "tsx": "^4.19.4",
    "typescript": "^5.8.3",
    "vite": "^6.3.5",
    "vitest": "^3.2.1"
  },
  "files": [
    "dist",
    "src",
    "README.md",
    "LICENSE"
  ]
}