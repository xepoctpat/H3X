# Nginx Configuration for H3X Unified System
# Reverse proxy and load balancing for all services

upstream h3x_backend {
    server h3x-main:8080 weight=3 max_fails=3 fail_timeout=30s;
    server h3x-main:8081 weight=1 max_fails=3 fail_timeout=30s backup;
}

upstream flups_frontend {
    server h3x-flups-frontend:8080 weight=2 max_fails=3 fail_timeout=30s;
    server h3x-flups-frontend:5173 weight=1 max_fails=3 fail_timeout=30s backup;
}

upstream lmstudio_api {
    server h3x-lmstudio:1234 weight=1 max_fails=2 fail_timeout=60s;
}

upstream realtime_data {
    server h3x-weather-ingestion:3001 weight=1;
    server h3x-financial-ingestion:3002 weight=1;
}

upstream feedback_processor {
    server h3x-feedback-processor:3003 weight=1;
}

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=websocket_limit:10m rate=5r/s;
limit_req_zone $binary_remote_addr zone=data_limit:10m rate=20r/s;

# Main server configuration
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name h3x.local localhost;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Gzip compression
    gzip on;
    gzip_types
        text/plain
        text/css
        text/js
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json;
    gzip_min_length 1000;

    # Main H3X application
    location / {
        limit_req zone=api_limit burst=20 nodelay;
        
        proxy_pass http://h3x_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }

    # fLups frontend
    location /flups/ {
        limit_req zone=api_limit burst=15 nodelay;
        
        proxy_pass http://flups_frontend/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # LM Studio API
    location /api/lmstudio/ {
        limit_req zone=api_limit burst=10 nodelay;
        
        proxy_pass http://lmstudio_api/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Longer timeouts for AI processing
        proxy_connect_timeout 60s;
        proxy_send_timeout 120s;
        proxy_read_timeout 120s;
    }

    # Real-time data endpoints
    location /api/data/ {
        limit_req zone=data_limit burst=30 nodelay;
        
        proxy_pass http://realtime_data/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Feedback processor API
    location /api/feedback/ {
        limit_req zone=api_limit burst=15 nodelay;
        
        proxy_pass http://feedback_processor/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # WebSocket connections
    location /ws/ {
        limit_req zone=websocket_limit burst=5 nodelay;
        
        proxy_pass http://h3x_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket specific settings
        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
    }

    # Health check endpoints
    location /health {
        access_log off;
        return 200 "H3X Unified System - Healthy\n";
        add_header Content-Type text/plain;
    }

    # Static assets with caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options nosniff;
    }

    # Monitoring endpoints (restricted access)
    location /metrics {
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
        
        proxy_pass http://prometheus:9090;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}

# HTTPS configuration (for production)
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name h3x.local localhost;

    # SSL configuration (uncomment for production)
    # ssl_certificate /etc/nginx/ssl/cert.pem;
    # ssl_certificate_key /etc/nginx/ssl/key.pem;
    # ssl_protocols TLSv1.2 TLSv1.3;
    # ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    # ssl_prefer_server_ciphers off;

    # Redirect to HTTP for development
    return 301 http://$server_name$request_uri;
}
