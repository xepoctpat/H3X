version: 2

# Global settings for all ecosystems
registries:
  npm-npmjs:
    type: npm-registry
    url: https://registry.npmjs.org

updates:
  # Main npm dependencies - Production packages
  - package-ecosystem: "npm"
    directory: "/"
    schedule:
      interval: "weekly"
      day: "monday"
      time: "02:00"
      timezone: "UTC"
    open-pull-requests-limit: 5
    target-branch: "develop"
    labels:
      - "dependencies"
      - "automated"
      - "npm"
      - "production"
    commit-message:
      prefix: "chore(deps):"
      prefix-development: "chore(deps-dev):"
      include: "scope"
    reviewers:
      - "h3x-automation-bot"
    # Group related packages together
    groups:
      # Group TypeScript and related tooling
      typescript:
        patterns:
          - "typescript"
          - "@types/*"
          - "ts-node"
          - "tsx"
        update-types:
          - "minor"
          - "patch"
      # Group testing frameworks
      testing:
        patterns:
          - "jest"
          - "@jest/*"
          - "mocha"
          - "chai"
          - "vitest"
        update-types:
          - "minor"
          - "patch"
      # Group build tools
      build-tools:
        patterns:
          - "webpack"
          - "vite"
          - "rollup"
          - "esbuild"
          - "babel"
          - "@babel/*"
        update-types:
          - "minor"
          - "patch"
      # Group linting and formatting
      code-quality:
        patterns:
          - "eslint"
          - "@eslint/*"
          - "prettier"
          - "husky"
          - "lint-staged"
        update-types:
          - "minor"
          - "patch"
      # Group Express.js ecosystem
      express:
        patterns:
          - "express"
          - "@types/express"
          - "cors"
          - "helmet"
          - "morgan"
        update-types:
          - "minor"
          - "patch"
      # Group monitoring and logging
      monitoring:
        patterns:
          - "winston"
          - "pino"
          - "prometheus-*"
          - "grafana-*"
        update-types:
          - "minor"
          - "patch"
    # Auto-merge configuration
    allow:
      - dependency-type: "direct:production"
        update-type: "version-update:semver-patch"
      - dependency-type: "direct:development"
        update-type: "version-update:semver-patch"
      - dependency-type: "indirect"
        update-type: "version-update:semver-patch"
    # Ignore certain packages that need manual handling
    ignore:
      - dependency-name: "node"
        versions: [">=21.0.0"]
      - dependency-name: "mongodb"
        update-types: ["version-update:semver-major"]

  # Development dependencies - separate config for dev tools
  - package-ecosystem: "npm"
    directory: "/scripts"
    schedule:
      interval: "weekly"
      day: "tuesday"
      time: "02:00"
      timezone: "UTC"
    open-pull-requests-limit: 3
    target-branch: "develop"
    labels:
      - "dependencies"
      - "automated"
      - "scripts"
      - "development"
    commit-message:
      prefix: "chore(deps-scripts):"
      include: "scope"

  # Docker containers and base images
  - package-ecosystem: "docker"
    directory: "/"
    schedule:
      interval: "weekly"
      day: "wednesday"
      time: "02:00"
      timezone: "UTC"
    open-pull-requests-limit: 3
    target-branch: "develop"
    labels:
      - "docker"
      - "dependencies"
      - "automated"
      - "infrastructure"
    commit-message:
      prefix: "chore(docker):"
      include: "scope"
    # Group Docker images by type
    groups:
      base-images:
        patterns:
          - "node:*"
          - "alpine:*"
          - "ubuntu:*"
        update-types:
          - "minor"
          - "patch"
      databases:
        patterns:
          - "mongodb:*"
          - "redis:*"
          - "postgres:*"
        update-types:
          - "minor"
          - "patch"

  # Additional Docker files
  - package-ecosystem: "docker"
    directory: "/docker"
    schedule:
      interval: "weekly"
      day: "wednesday"
      time: "02:30"
      timezone: "UTC"
    open-pull-requests-limit: 2
    target-branch: "develop"
    labels:
      - "docker"
      - "dependencies"
      - "automated"
      - "docker-configs"

  # GitHub Actions workflows
  - package-ecosystem: "github-actions"
    directory: "/.github/workflows"
    schedule:
      interval: "weekly"
      day: "thursday"
      time: "02:00"
      timezone: "UTC"
    open-pull-requests-limit: 2
    target-branch: "develop"
    labels:
      - "github-actions"
      - "dependencies"
      - "automated"
      - "ci-cd"
    commit-message:
      prefix: "chore(actions):"
      include: "scope"
    # Group related GitHub Actions
    groups:
      checkout-setup:
        patterns:
          - "actions/checkout"
          - "actions/setup-node"
          - "actions/setup-python"
          - "actions/cache"
        update-types:
          - "minor"
          - "patch"
      security-scanning:
        patterns:
          - "github/codeql-action/*"
          - "snyk/actions/*"
          - "securecodewarrior/github-action-add-sarif"
        update-types:
          - "minor"
          - "patch"
      deployment:
        patterns:
          - "azure/webapps-deploy"
          - "docker/build-push-action"
          - "docker/setup-buildx-action"
        update-types:
          - "minor"
          - "patch"

  # Terraform configurations (if present)
  - package-ecosystem: "terraform"
    directory: "/infrastructure"
    schedule:
      interval: "weekly"
      day: "friday"
      time: "02:00"
      timezone: "UTC"
    open-pull-requests-limit: 2
    target-branch: "develop"
    labels:
      - "terraform"
      - "dependencies"
      - "automated"
      - "infrastructure"
    commit-message:
      prefix: "chore(terraform):"
      include: "scope"

  # Pip dependencies (if present)
  - package-ecosystem: "pip"
    directory: "/python"
    schedule:
      interval: "weekly"
      day: "friday"
      time: "02:30"
      timezone: "UTC"
    open-pull-requests-limit: 2
    target-branch: "develop"
    labels:
      - "python"
      - "dependencies"
      - "automated"
    commit-message:
      prefix: "chore(pip):"
      include: "scope"
